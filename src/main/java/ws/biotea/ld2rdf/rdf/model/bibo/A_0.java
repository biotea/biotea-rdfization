/**
 * pubmed.endNote.jaxb.generated by http://RDFReactor.semweb4j.org ($Id: CodeGenerator.java 1535 2008-09-09 15:44:46Z max.at.xam.de $) on 13/01/11 08:05 PM
 */
package ws.biotea.ld2rdf.rdf.model.bibo;

import org.ontoware.aifbcommons.collection.ClosableIterator;
import org.ontoware.rdf2go.exception.ModelRuntimeException;
import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;
import org.ontoware.rdfreactor.runtime.Base;
import org.ontoware.rdfreactor.runtime.ReactorResult;

/**
 * This class manages access to these properties:
 * <ul>
 *   <li> Asin </li>
 *   <li> Coden </li>
 *   <li> Distributor </li>
 *   <li> Doi </li>
 *   <li> Eanucc13 </li>
 *   <li> Editor </li>
 *   <li> Eissn </li>
 *   <li> Gtin14 </li>
 *   <li> Handle </li>
 *   <li> Identifier </li>
 *   <li> Isbn10 </li>
 *   <li> Isbn13 </li>
 *   <li> Issn </li>
 *   <li> Issuer </li>
 *   <li> Lccn </li>
 *   <li> Oclcnum </li>
 *   <li> Owner </li>
 *   <li> Pmid </li>
 *   <li> Producer </li>
 *   <li> Sici </li>
 *   <li> Translator </li>
 *   <li> Upc </li>
 *   <li> Uri </li>
 * </ul>
 *
 * This class was pubmed.endNote.jaxb.generated by <a href="http://RDFReactor.semweb4j.org">RDFReactor</a> on 13/01/11 08:05 PM
 */
public class A_0 extends Thing {

    /** blank://0 */
    @SuppressWarnings("hiding")
	public static final URI RDFS_CLASS = new URIImpl("blank://0", false);

    /** http://purl.org/ontology/bibo/asin */
    @SuppressWarnings("hiding")
	public static final URI ASIN = new URIImpl("http://purl.org/ontology/bibo/asin",false);

    /** http://purl.org/ontology/bibo/coden */
    @SuppressWarnings("hiding")
	public static final URI CODEN = new URIImpl("http://purl.org/ontology/bibo/coden",false);

    /** http://purl.org/ontology/bibo/distributor */
    @SuppressWarnings("hiding")
	public static final URI DISTRIBUTOR = new URIImpl("http://purl.org/ontology/bibo/distributor",false);

    /** http://purl.org/ontology/bibo/doi */
    @SuppressWarnings("hiding")
	public static final URI DOI = new URIImpl("http://purl.org/ontology/bibo/doi",false);

    /** http://purl.org/ontology/bibo/eanucc13 */
    @SuppressWarnings("hiding")
	public static final URI EANUCC13 = new URIImpl("http://purl.org/ontology/bibo/eanucc13",false);

    /** http://purl.org/ontology/bibo/editor */
    @SuppressWarnings("hiding")
	public static final URI EDITOR = new URIImpl("http://purl.org/ontology/bibo/editor",false);

    /** http://purl.org/ontology/bibo/eissn */
    @SuppressWarnings("hiding")
	public static final URI EISSN = new URIImpl("http://purl.org/ontology/bibo/eissn",false);

    /** http://purl.org/ontology/bibo/gtin14 */
    @SuppressWarnings("hiding")
	public static final URI GTIN14 = new URIImpl("http://purl.org/ontology/bibo/gtin14",false);

    /** http://purl.org/ontology/bibo/handle */
    @SuppressWarnings("hiding")
	public static final URI HANDLE = new URIImpl("http://purl.org/ontology/bibo/handle",false);

    /** http://purl.org/ontology/bibo/identifier */
    @SuppressWarnings("hiding")
	public static final URI IDENTIFIER = new URIImpl("http://purl.org/ontology/bibo/identifier",false);

    /** http://purl.org/ontology/bibo/isbn10 */
    @SuppressWarnings("hiding")
	public static final URI ISBN10 = new URIImpl("http://purl.org/ontology/bibo/isbn10",false);

    /** http://purl.org/ontology/bibo/isbn13 */
    @SuppressWarnings("hiding")
	public static final URI ISBN13 = new URIImpl("http://purl.org/ontology/bibo/isbn13",false);

    /** http://purl.org/ontology/bibo/issn */
    @SuppressWarnings("hiding")
	public static final URI ISSN = new URIImpl("http://purl.org/ontology/bibo/issn",false);

    /** http://purl.org/ontology/bibo/issuer */
    @SuppressWarnings("hiding")
	public static final URI ISSUER = new URIImpl("http://purl.org/ontology/bibo/issuer",false);

    /** http://purl.org/ontology/bibo/lccn */
    @SuppressWarnings("hiding")
	public static final URI LCCN = new URIImpl("http://purl.org/ontology/bibo/lccn",false);

    /** http://purl.org/ontology/bibo/oclcnum */
    @SuppressWarnings("hiding")
	public static final URI OCLCNUM = new URIImpl("http://purl.org/ontology/bibo/oclcnum",false);

    /** http://purl.org/ontology/bibo/owner */
    @SuppressWarnings("hiding")
	public static final URI OWNER = new URIImpl("http://purl.org/ontology/bibo/owner",false);

    /** http://purl.org/ontology/bibo/pmid */
    @SuppressWarnings("hiding")
	public static final URI PMID = new URIImpl("http://purl.org/ontology/bibo/pmid",false);

    /** http://purl.org/ontology/bibo/producer */
    @SuppressWarnings("hiding")
	public static final URI PRODUCER = new URIImpl("http://purl.org/ontology/bibo/producer",false);

    /** http://purl.org/ontology/bibo/sici */
    @SuppressWarnings("hiding")
	public static final URI SICI = new URIImpl("http://purl.org/ontology/bibo/sici",false);

    /** http://purl.org/ontology/bibo/translator */
    @SuppressWarnings("hiding")
	public static final URI TRANSLATOR = new URIImpl("http://purl.org/ontology/bibo/translator",false);

    /** http://purl.org/ontology/bibo/upc */
    @SuppressWarnings("hiding")
	public static final URI UPC = new URIImpl("http://purl.org/ontology/bibo/upc",false);

    /** http://purl.org/ontology/bibo/uri */
    @SuppressWarnings("hiding")
	public static final URI URI = new URIImpl("http://purl.org/ontology/bibo/uri",false);

    /** 
     * All property-URIs with this class as domain.
     * All properties of all super-classes are also available. 
     */
    @SuppressWarnings("hiding")
    public static final URI[] MANAGED_URIS = {
      new URIImpl("http://purl.org/ontology/bibo/asin",false),
      new URIImpl("http://purl.org/ontology/bibo/coden",false),
      new URIImpl("http://purl.org/ontology/bibo/distributor",false),
      new URIImpl("http://purl.org/ontology/bibo/doi",false),
      new URIImpl("http://purl.org/ontology/bibo/eanucc13",false),
      new URIImpl("http://purl.org/ontology/bibo/editor",false),
      new URIImpl("http://purl.org/ontology/bibo/eissn",false),
      new URIImpl("http://purl.org/ontology/bibo/gtin14",false),
      new URIImpl("http://purl.org/ontology/bibo/handle",false),
      new URIImpl("http://purl.org/ontology/bibo/identifier",false),
      new URIImpl("http://purl.org/ontology/bibo/isbn10",false),
      new URIImpl("http://purl.org/ontology/bibo/isbn13",false),
      new URIImpl("http://purl.org/ontology/bibo/issn",false),
      new URIImpl("http://purl.org/ontology/bibo/issuer",false),
      new URIImpl("http://purl.org/ontology/bibo/lccn",false),
      new URIImpl("http://purl.org/ontology/bibo/oclcnum",false),
      new URIImpl("http://purl.org/ontology/bibo/owner",false),
      new URIImpl("http://purl.org/ontology/bibo/pmid",false),
      new URIImpl("http://purl.org/ontology/bibo/producer",false),
      new URIImpl("http://purl.org/ontology/bibo/sici",false),
      new URIImpl("http://purl.org/ontology/bibo/translator",false),
      new URIImpl("http://purl.org/ontology/bibo/upc",false),
      new URIImpl("http://purl.org/ontology/bibo/uri",false) 
    };


	// protected constructors needed for inheritance
	
	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.semweb4j.org
	 * @param classURI URI of RDFS class
	 * @param instanceIdentifier Resource that identifies this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c1] 
	 */
	protected A_0 ( Model model, URI classURI, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, classURI, instanceIdentifier, write);
	}

	// public constructors

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param instanceIdentifier an RDF2Go Resource identifying this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c2] 
	 */
	public A_0 ( Model model, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, RDFS_CLASS, instanceIdentifier, write);
	}


	/**
	 * Returns a Java wrapper over an RDF object, identified by a URI, given as a String.
	 * Creating two wrappers for the same URI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uriString a URI given as a String
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 * @throws ModelRuntimeException if URI syntax is wrong
	 *
	 * [Generated from RDFReactor template rule #c7] 
	 */
	public A_0 ( Model model, String uriString, boolean write) throws ModelRuntimeException {
		super(model, RDFS_CLASS, new URIImpl(uriString,false), write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by a blank node.
	 * Creating two wrappers for the same blank node is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param bnode BlankNode of this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c8] 
	 */
	public A_0 ( Model model, BlankNode bnode, boolean write ) {
		super(model, RDFS_CLASS, bnode, write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by 
	 * a randomly pubmed.endNote.jaxb.generated URI.
	 * Creating two wrappers results in different URIs.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c9] 
	 */
	public A_0 ( Model model, boolean write ) {
		super(model, RDFS_CLASS, model.newRandomUniqueURI(), write);
	}

    ///////////////////////////////////////////////////////////////////
    // typing

	/**
	 * Return an existing instance of this class in the model. No statements are written.
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return an instance of A_0  or null if none existst
	 *
	 * [Generated from RDFReactor template rule #class0] 
	 */
	public static A_0  getInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getInstance(model, instanceResource, A_0.class);
	}

	/**
	 * Create a new instance of this class in the model. 
	 * That is, create the statement (instanceResource, RDF.type, blank://0).
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class1] 
	 */
	public static void createInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.createInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return true if instanceResource is an instance of this class in the model
	 *
	 * [Generated from RDFReactor template rule #class2] 
	 */
	public static boolean hasInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.hasInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as RDF resources
	 *
	 * [Generated from RDFReactor template rule #class3] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllInstances(Model model) {
		return Base.getAllInstances(model, RDFS_CLASS, org.ontoware.rdf2go.model.node.Resource.class);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as a ReactorResult,
	 * which can conveniently be converted to iterator, list or array.
	 *
	 * [Generated from RDFReactor template rule #class3-as] 
	 */
	public static ReactorResult<? extends A_0> getAllInstances_as(Model model) {
		return Base.getAllInstances_as(model, RDFS_CLASS, A_0.class );
	}

    /**
	 * Remove rdf:type A_0 from this instance. Other triples are not affected.
	 * To delete more, use deleteAllProperties
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class4] 
	 */
	public static void deleteInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * Delete all (this, *, *), i.e. including rdf:type
	 * @param model an RDF2Go model
	 * @param resource
	 */
	public static void deleteAllProperties(Model model,	org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteAllProperties(model, instanceResource);
	}

    ///////////////////////////////////////////////////////////////////
    // property access methods

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Listofauthors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofauthors_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Document.LISTOFAUTHORS, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Listofauthors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofauthors_Inverse() {
		return Base.getAll_Inverse(this.model, Document.LISTOFAUTHORS, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Listofauthors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofauthors_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Document.LISTOFAUTHORS, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Listofcontributors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofcontributors_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Document.LISTOFCONTRIBUTORS, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Listofcontributors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofcontributors_Inverse() {
		return Base.getAll_Inverse(this.model, Document.LISTOFCONTRIBUTORS, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Listofcontributors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofcontributors_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Document.LISTOFCONTRIBUTORS, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Listofeditors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofeditors_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Document.LISTOFEDITORS, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Listofeditors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofeditors_Inverse() {
		return Base.getAll_Inverse(this.model, Document.LISTOFEDITORS, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Listofeditors' to this A_0 instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllbiboListofeditors_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Document.LISTOFEDITORS, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}



    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@7d600a has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboAsin(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, ASIN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@7d600a has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboAsin() {
		return Base.has(this.model, this.getResource(), ASIN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@7d600a has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboAsin(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, ASIN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@7d600a has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboAsin( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), ASIN);
	}

     /**
     * Get all values of property Asin as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboAsin_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, ASIN);
	}
	
    /**
     * Get all values of property Asin as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboAsin_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ASIN, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Asin as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboAsin_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), ASIN);
	}

    /**
     * Get all values of property Asin as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboAsin_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), ASIN, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Asin     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboAsin(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, ASIN, java.lang.String.class);
	}
	
    /**
     * Get all values of property Asin as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboAsin_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ASIN, java.lang.String.class);
	}

    /**
     * Get all values of property Asin     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboAsin() {
		return Base.getAll(this.model, this.getResource(), ASIN, java.lang.String.class);
	}

    /**
     * Get all values of property Asin as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboAsin_as() {
		return Base.getAll_as(this.model, this.getResource(), ASIN, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Asin as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboAsin( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, ASIN, value);
	}
	
    /**
     * Adds a value to property Asin as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboAsin( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), ASIN, value);
	}
    /**
     * Adds a value to property Asin from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboAsin(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, ASIN, value);
	}
	
    /**
     * Adds a value to property Asin from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboAsin(java.lang.String value) {
		Base.add(this.model, this.getResource(), ASIN, value);
	}
  

    /**
     * Sets a value of property Asin from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboAsin( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, ASIN, value);
	}
	
    /**
     * Sets a value of property Asin from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboAsin( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), ASIN, value);
	}
    /**
     * Sets a value of property Asin from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboAsin(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, ASIN, value);
	}
	
    /**
     * Sets a value of property Asin from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboAsin(java.lang.String value) {
		Base.set(this.model, this.getResource(), ASIN, value);
	}
  


    /**
     * Removes a value of property Asin as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboAsin( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, ASIN, value);
	}
	
    /**
     * Removes a value of property Asin as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboAsin( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), ASIN, value);
	}
    /**
     * Removes a value of property Asin given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboAsin(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, ASIN, value);
	}
	
    /**
     * Removes a value of property Asin given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboAsin(java.lang.String value) {
		Base.remove(this.model, this.getResource(), ASIN, value);
	}
  
    /**
     * Removes all values of property Asin     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboAsin( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, ASIN);
	}
	
    /**
     * Removes all values of property Asin	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboAsin() {
		Base.removeAll(this.model, this.getResource(), ASIN);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1a23c1b has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboCoden(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, CODEN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1a23c1b has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboCoden() {
		return Base.has(this.model, this.getResource(), CODEN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1a23c1b has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboCoden(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, CODEN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1a23c1b has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboCoden( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), CODEN);
	}

     /**
     * Get all values of property Coden as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboCoden_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, CODEN);
	}
	
    /**
     * Get all values of property Coden as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboCoden_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, CODEN, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Coden as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboCoden_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), CODEN);
	}

    /**
     * Get all values of property Coden as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboCoden_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), CODEN, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Coden     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboCoden(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, CODEN, java.lang.String.class);
	}
	
    /**
     * Get all values of property Coden as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboCoden_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, CODEN, java.lang.String.class);
	}

    /**
     * Get all values of property Coden     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboCoden() {
		return Base.getAll(this.model, this.getResource(), CODEN, java.lang.String.class);
	}

    /**
     * Get all values of property Coden as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboCoden_as() {
		return Base.getAll_as(this.model, this.getResource(), CODEN, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Coden as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboCoden( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, CODEN, value);
	}
	
    /**
     * Adds a value to property Coden as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboCoden( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), CODEN, value);
	}
    /**
     * Adds a value to property Coden from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboCoden(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, CODEN, value);
	}
	
    /**
     * Adds a value to property Coden from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboCoden(java.lang.String value) {
		Base.add(this.model, this.getResource(), CODEN, value);
	}
  

    /**
     * Sets a value of property Coden from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboCoden( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, CODEN, value);
	}
	
    /**
     * Sets a value of property Coden from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboCoden( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), CODEN, value);
	}
    /**
     * Sets a value of property Coden from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboCoden(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, CODEN, value);
	}
	
    /**
     * Sets a value of property Coden from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboCoden(java.lang.String value) {
		Base.set(this.model, this.getResource(), CODEN, value);
	}
  


    /**
     * Removes a value of property Coden as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboCoden( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, CODEN, value);
	}
	
    /**
     * Removes a value of property Coden as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboCoden( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), CODEN, value);
	}
    /**
     * Removes a value of property Coden given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboCoden(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, CODEN, value);
	}
	
    /**
     * Removes a value of property Coden given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboCoden(java.lang.String value) {
		Base.remove(this.model, this.getResource(), CODEN, value);
	}
  
    /**
     * Removes all values of property Coden     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboCoden( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, CODEN);
	}
	
    /**
     * Removes all values of property Coden	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboCoden() {
		Base.removeAll(this.model, this.getResource(), CODEN);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2d6ea3 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboDistributor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, DISTRIBUTOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2d6ea3 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboDistributor() {
		return Base.has(this.model, this.getResource(), DISTRIBUTOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2d6ea3 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboDistributor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, DISTRIBUTOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2d6ea3 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboDistributor( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), DISTRIBUTOR);
	}

     /**
     * Get all values of property Distributor as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboDistributor_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, DISTRIBUTOR);
	}
	
    /**
     * Get all values of property Distributor as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboDistributor_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DISTRIBUTOR, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Distributor as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboDistributor_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), DISTRIBUTOR);
	}

    /**
     * Get all values of property Distributor as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboDistributor_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), DISTRIBUTOR, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Distributor     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Agent> getAllbiboDistributor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, DISTRIBUTOR, Agent.class);
	}
	
    /**
     * Get all values of property Distributor as a ReactorResult of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Agent> getAllbiboDistributor_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DISTRIBUTOR, Agent.class);
	}

    /**
     * Get all values of property Distributor     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Agent> getAllbiboDistributor() {
		return Base.getAll(this.model, this.getResource(), DISTRIBUTOR, Agent.class);
	}

    /**
     * Get all values of property Distributor as a ReactorResult of Agent 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Agent> getAllbiboDistributor_as() {
		return Base.getAll_as(this.model, this.getResource(), DISTRIBUTOR, Agent.class);
	}
 
    /**
     * Adds a value to property Distributor as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboDistributor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, DISTRIBUTOR, value);
	}
	
    /**
     * Adds a value to property Distributor as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboDistributor( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), DISTRIBUTOR, value);
	}
    /**
     * Adds a value to property Distributor from an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboDistributor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.add(model, instanceResource, DISTRIBUTOR, value);
	}
	
    /**
     * Adds a value to property Distributor from an instance of Agent 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboDistributor(Agent value) {
		Base.add(this.model, this.getResource(), DISTRIBUTOR, value);
	}
  

    /**
     * Sets a value of property Distributor from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboDistributor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, DISTRIBUTOR, value);
	}
	
    /**
     * Sets a value of property Distributor from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboDistributor( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), DISTRIBUTOR, value);
	}
    /**
     * Sets a value of property Distributor from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboDistributor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.set(model, instanceResource, DISTRIBUTOR, value);
	}
	
    /**
     * Sets a value of property Distributor from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboDistributor(Agent value) {
		Base.set(this.model, this.getResource(), DISTRIBUTOR, value);
	}
  


    /**
     * Removes a value of property Distributor as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboDistributor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, DISTRIBUTOR, value);
	}
	
    /**
     * Removes a value of property Distributor as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboDistributor( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), DISTRIBUTOR, value);
	}
    /**
     * Removes a value of property Distributor given as an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboDistributor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.remove(model, instanceResource, DISTRIBUTOR, value);
	}
	
    /**
     * Removes a value of property Distributor given as an instance of Agent 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboDistributor(Agent value) {
		Base.remove(this.model, this.getResource(), DISTRIBUTOR, value);
	}
  
    /**
     * Removes all values of property Distributor     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboDistributor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, DISTRIBUTOR);
	}
	
    /**
     * Removes all values of property Distributor	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboDistributor() {
		Base.removeAll(this.model, this.getResource(), DISTRIBUTOR);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@162e99a has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboDoi(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, DOI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@162e99a has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboDoi() {
		return Base.has(this.model, this.getResource(), DOI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@162e99a has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboDoi(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, DOI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@162e99a has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboDoi( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), DOI);
	}

     /**
     * Get all values of property Doi as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboDoi_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, DOI);
	}
	
    /**
     * Get all values of property Doi as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboDoi_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DOI, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Doi as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboDoi_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), DOI);
	}

    /**
     * Get all values of property Doi as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboDoi_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), DOI, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Doi     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboDoi(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, DOI, java.lang.String.class);
	}
	
    /**
     * Get all values of property Doi as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboDoi_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DOI, java.lang.String.class);
	}

    /**
     * Get all values of property Doi     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboDoi() {
		return Base.getAll(this.model, this.getResource(), DOI, java.lang.String.class);
	}

    /**
     * Get all values of property Doi as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboDoi_as() {
		return Base.getAll_as(this.model, this.getResource(), DOI, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Doi as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboDoi( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, DOI, value);
	}
	
    /**
     * Adds a value to property Doi as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboDoi( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), DOI, value);
	}
    /**
     * Adds a value to property Doi from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboDoi(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, DOI, value);
	}
	
    /**
     * Adds a value to property Doi from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboDoi(java.lang.String value) {
		Base.add(this.model, this.getResource(), DOI, value);
	}
  

    /**
     * Sets a value of property Doi from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboDoi( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, DOI, value);
	}
	
    /**
     * Sets a value of property Doi from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboDoi( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), DOI, value);
	}
    /**
     * Sets a value of property Doi from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboDoi(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, DOI, value);
	}
	
    /**
     * Sets a value of property Doi from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboDoi(java.lang.String value) {
		Base.set(this.model, this.getResource(), DOI, value);
	}
  


    /**
     * Removes a value of property Doi as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboDoi( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, DOI, value);
	}
	
    /**
     * Removes a value of property Doi as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboDoi( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), DOI, value);
	}
    /**
     * Removes a value of property Doi given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboDoi(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, DOI, value);
	}
	
    /**
     * Removes a value of property Doi given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboDoi(java.lang.String value) {
		Base.remove(this.model, this.getResource(), DOI, value);
	}
  
    /**
     * Removes all values of property Doi     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboDoi( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, DOI);
	}
	
    /**
     * Removes all values of property Doi	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboDoi() {
		Base.removeAll(this.model, this.getResource(), DOI);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@961b26 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboEanucc13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, EANUCC13);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@961b26 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboEanucc13() {
		return Base.has(this.model, this.getResource(), EANUCC13);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@961b26 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboEanucc13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, EANUCC13);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@961b26 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboEanucc13( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), EANUCC13);
	}

     /**
     * Get all values of property Eanucc13 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboEanucc13_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, EANUCC13);
	}
	
    /**
     * Get all values of property Eanucc13 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboEanucc13_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EANUCC13, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Eanucc13 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboEanucc13_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), EANUCC13);
	}

    /**
     * Get all values of property Eanucc13 as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboEanucc13_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), EANUCC13, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Eanucc13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboEanucc13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, EANUCC13, java.lang.String.class);
	}
	
    /**
     * Get all values of property Eanucc13 as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboEanucc13_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EANUCC13, java.lang.String.class);
	}

    /**
     * Get all values of property Eanucc13     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboEanucc13() {
		return Base.getAll(this.model, this.getResource(), EANUCC13, java.lang.String.class);
	}

    /**
     * Get all values of property Eanucc13 as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboEanucc13_as() {
		return Base.getAll_as(this.model, this.getResource(), EANUCC13, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Eanucc13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboEanucc13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, EANUCC13, value);
	}
	
    /**
     * Adds a value to property Eanucc13 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboEanucc13( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), EANUCC13, value);
	}
    /**
     * Adds a value to property Eanucc13 from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboEanucc13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, EANUCC13, value);
	}
	
    /**
     * Adds a value to property Eanucc13 from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboEanucc13(java.lang.String value) {
		Base.add(this.model, this.getResource(), EANUCC13, value);
	}
  

    /**
     * Sets a value of property Eanucc13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboEanucc13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, EANUCC13, value);
	}
	
    /**
     * Sets a value of property Eanucc13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboEanucc13( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), EANUCC13, value);
	}
    /**
     * Sets a value of property Eanucc13 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboEanucc13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, EANUCC13, value);
	}
	
    /**
     * Sets a value of property Eanucc13 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboEanucc13(java.lang.String value) {
		Base.set(this.model, this.getResource(), EANUCC13, value);
	}
  


    /**
     * Removes a value of property Eanucc13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboEanucc13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, EANUCC13, value);
	}
	
    /**
     * Removes a value of property Eanucc13 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboEanucc13( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), EANUCC13, value);
	}
    /**
     * Removes a value of property Eanucc13 given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboEanucc13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, EANUCC13, value);
	}
	
    /**
     * Removes a value of property Eanucc13 given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboEanucc13(java.lang.String value) {
		Base.remove(this.model, this.getResource(), EANUCC13, value);
	}
  
    /**
     * Removes all values of property Eanucc13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboEanucc13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, EANUCC13);
	}
	
    /**
     * Removes all values of property Eanucc13	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboEanucc13() {
		Base.removeAll(this.model, this.getResource(), EANUCC13);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@17c225d has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboEditor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, EDITOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@17c225d has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboEditor() {
		return Base.has(this.model, this.getResource(), EDITOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@17c225d has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboEditor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, EDITOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@17c225d has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboEditor( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), EDITOR);
	}

     /**
     * Get all values of property Editor as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboEditor_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, EDITOR);
	}
	
    /**
     * Get all values of property Editor as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboEditor_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EDITOR, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Editor as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboEditor_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), EDITOR);
	}

    /**
     * Get all values of property Editor as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboEditor_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), EDITOR, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Editor     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Agent> getAllbiboEditor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, EDITOR, Agent.class);
	}
	
    /**
     * Get all values of property Editor as a ReactorResult of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Agent> getAllbiboEditor_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EDITOR, Agent.class);
	}

    /**
     * Get all values of property Editor     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Agent> getAllbiboEditor() {
		return Base.getAll(this.model, this.getResource(), EDITOR, Agent.class);
	}

    /**
     * Get all values of property Editor as a ReactorResult of Agent 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Agent> getAllbiboEditor_as() {
		return Base.getAll_as(this.model, this.getResource(), EDITOR, Agent.class);
	}
 
    /**
     * Adds a value to property Editor as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboEditor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, EDITOR, value);
	}
	
    /**
     * Adds a value to property Editor as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboEditor( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), EDITOR, value);
	}
    /**
     * Adds a value to property Editor from an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboEditor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.add(model, instanceResource, EDITOR, value);
	}
	
    /**
     * Adds a value to property Editor from an instance of Agent 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboEditor(Agent value) {
		Base.add(this.model, this.getResource(), EDITOR, value);
	}
  

    /**
     * Sets a value of property Editor from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboEditor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, EDITOR, value);
	}
	
    /**
     * Sets a value of property Editor from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboEditor( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), EDITOR, value);
	}
    /**
     * Sets a value of property Editor from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboEditor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.set(model, instanceResource, EDITOR, value);
	}
	
    /**
     * Sets a value of property Editor from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboEditor(Agent value) {
		Base.set(this.model, this.getResource(), EDITOR, value);
	}
  


    /**
     * Removes a value of property Editor as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboEditor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, EDITOR, value);
	}
	
    /**
     * Removes a value of property Editor as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboEditor( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), EDITOR, value);
	}
    /**
     * Removes a value of property Editor given as an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboEditor(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.remove(model, instanceResource, EDITOR, value);
	}
	
    /**
     * Removes a value of property Editor given as an instance of Agent 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboEditor(Agent value) {
		Base.remove(this.model, this.getResource(), EDITOR, value);
	}
  
    /**
     * Removes all values of property Editor     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboEditor( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, EDITOR);
	}
	
    /**
     * Removes all values of property Editor	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboEditor() {
		Base.removeAll(this.model, this.getResource(), EDITOR);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ce0b2b has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboEissn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, EISSN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ce0b2b has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboEissn() {
		return Base.has(this.model, this.getResource(), EISSN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ce0b2b has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboEissn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, EISSN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ce0b2b has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboEissn( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), EISSN);
	}

     /**
     * Get all values of property Eissn as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboEissn_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, EISSN);
	}
	
    /**
     * Get all values of property Eissn as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboEissn_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EISSN, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Eissn as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboEissn_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), EISSN);
	}

    /**
     * Get all values of property Eissn as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboEissn_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), EISSN, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Eissn     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboEissn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, EISSN, java.lang.String.class);
	}
	
    /**
     * Get all values of property Eissn as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboEissn_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EISSN, java.lang.String.class);
	}

    /**
     * Get all values of property Eissn     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboEissn() {
		return Base.getAll(this.model, this.getResource(), EISSN, java.lang.String.class);
	}

    /**
     * Get all values of property Eissn as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboEissn_as() {
		return Base.getAll_as(this.model, this.getResource(), EISSN, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Eissn as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboEissn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, EISSN, value);
	}
	
    /**
     * Adds a value to property Eissn as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboEissn( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), EISSN, value);
	}
    /**
     * Adds a value to property Eissn from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboEissn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, EISSN, value);
	}
	
    /**
     * Adds a value to property Eissn from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboEissn(java.lang.String value) {
		Base.add(this.model, this.getResource(), EISSN, value);
	}
  

    /**
     * Sets a value of property Eissn from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboEissn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, EISSN, value);
	}
	
    /**
     * Sets a value of property Eissn from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboEissn( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), EISSN, value);
	}
    /**
     * Sets a value of property Eissn from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboEissn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, EISSN, value);
	}
	
    /**
     * Sets a value of property Eissn from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboEissn(java.lang.String value) {
		Base.set(this.model, this.getResource(), EISSN, value);
	}
  


    /**
     * Removes a value of property Eissn as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboEissn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, EISSN, value);
	}
	
    /**
     * Removes a value of property Eissn as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboEissn( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), EISSN, value);
	}
    /**
     * Removes a value of property Eissn given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboEissn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, EISSN, value);
	}
	
    /**
     * Removes a value of property Eissn given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboEissn(java.lang.String value) {
		Base.remove(this.model, this.getResource(), EISSN, value);
	}
  
    /**
     * Removes all values of property Eissn     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboEissn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, EISSN);
	}
	
    /**
     * Removes all values of property Eissn	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboEissn() {
		Base.removeAll(this.model, this.getResource(), EISSN);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@112507e has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboGtin14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, GTIN14);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@112507e has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboGtin14() {
		return Base.has(this.model, this.getResource(), GTIN14);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@112507e has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboGtin14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, GTIN14);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@112507e has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboGtin14( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), GTIN14);
	}

     /**
     * Get all values of property Gtin14 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboGtin14_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, GTIN14);
	}
	
    /**
     * Get all values of property Gtin14 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboGtin14_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, GTIN14, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Gtin14 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboGtin14_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), GTIN14);
	}

    /**
     * Get all values of property Gtin14 as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboGtin14_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), GTIN14, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Gtin14     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboGtin14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, GTIN14, java.lang.String.class);
	}
	
    /**
     * Get all values of property Gtin14 as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboGtin14_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, GTIN14, java.lang.String.class);
	}

    /**
     * Get all values of property Gtin14     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboGtin14() {
		return Base.getAll(this.model, this.getResource(), GTIN14, java.lang.String.class);
	}

    /**
     * Get all values of property Gtin14 as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboGtin14_as() {
		return Base.getAll_as(this.model, this.getResource(), GTIN14, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Gtin14 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboGtin14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, GTIN14, value);
	}
	
    /**
     * Adds a value to property Gtin14 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboGtin14( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), GTIN14, value);
	}
    /**
     * Adds a value to property Gtin14 from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboGtin14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, GTIN14, value);
	}
	
    /**
     * Adds a value to property Gtin14 from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboGtin14(java.lang.String value) {
		Base.add(this.model, this.getResource(), GTIN14, value);
	}
  

    /**
     * Sets a value of property Gtin14 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboGtin14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, GTIN14, value);
	}
	
    /**
     * Sets a value of property Gtin14 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboGtin14( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), GTIN14, value);
	}
    /**
     * Sets a value of property Gtin14 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboGtin14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, GTIN14, value);
	}
	
    /**
     * Sets a value of property Gtin14 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboGtin14(java.lang.String value) {
		Base.set(this.model, this.getResource(), GTIN14, value);
	}
  


    /**
     * Removes a value of property Gtin14 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboGtin14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, GTIN14, value);
	}
	
    /**
     * Removes a value of property Gtin14 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboGtin14( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), GTIN14, value);
	}
    /**
     * Removes a value of property Gtin14 given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboGtin14(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, GTIN14, value);
	}
	
    /**
     * Removes a value of property Gtin14 given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboGtin14(java.lang.String value) {
		Base.remove(this.model, this.getResource(), GTIN14, value);
	}
  
    /**
     * Removes all values of property Gtin14     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboGtin14( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, GTIN14);
	}
	
    /**
     * Removes all values of property Gtin14	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboGtin14() {
		Base.removeAll(this.model, this.getResource(), GTIN14);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10ef415 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboHandle(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, HANDLE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10ef415 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboHandle() {
		return Base.has(this.model, this.getResource(), HANDLE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10ef415 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboHandle(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, HANDLE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10ef415 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboHandle( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), HANDLE);
	}

     /**
     * Get all values of property Handle as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboHandle_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, HANDLE);
	}
	
    /**
     * Get all values of property Handle as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboHandle_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, HANDLE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Handle as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboHandle_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), HANDLE);
	}

    /**
     * Get all values of property Handle as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboHandle_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), HANDLE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Handle     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboHandle(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, HANDLE, java.lang.String.class);
	}
	
    /**
     * Get all values of property Handle as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboHandle_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, HANDLE, java.lang.String.class);
	}

    /**
     * Get all values of property Handle     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboHandle() {
		return Base.getAll(this.model, this.getResource(), HANDLE, java.lang.String.class);
	}

    /**
     * Get all values of property Handle as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboHandle_as() {
		return Base.getAll_as(this.model, this.getResource(), HANDLE, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Handle as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboHandle( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, HANDLE, value);
	}
	
    /**
     * Adds a value to property Handle as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboHandle( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), HANDLE, value);
	}
    /**
     * Adds a value to property Handle from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboHandle(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, HANDLE, value);
	}
	
    /**
     * Adds a value to property Handle from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboHandle(java.lang.String value) {
		Base.add(this.model, this.getResource(), HANDLE, value);
	}
  

    /**
     * Sets a value of property Handle from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboHandle( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, HANDLE, value);
	}
	
    /**
     * Sets a value of property Handle from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboHandle( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), HANDLE, value);
	}
    /**
     * Sets a value of property Handle from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboHandle(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, HANDLE, value);
	}
	
    /**
     * Sets a value of property Handle from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboHandle(java.lang.String value) {
		Base.set(this.model, this.getResource(), HANDLE, value);
	}
  


    /**
     * Removes a value of property Handle as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboHandle( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, HANDLE, value);
	}
	
    /**
     * Removes a value of property Handle as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboHandle( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), HANDLE, value);
	}
    /**
     * Removes a value of property Handle given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboHandle(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, HANDLE, value);
	}
	
    /**
     * Removes a value of property Handle given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboHandle(java.lang.String value) {
		Base.remove(this.model, this.getResource(), HANDLE, value);
	}
  
    /**
     * Removes all values of property Handle     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboHandle( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, HANDLE);
	}
	
    /**
     * Removes all values of property Handle	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboHandle() {
		Base.removeAll(this.model, this.getResource(), HANDLE);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bc5941 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboIdentifier(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, IDENTIFIER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bc5941 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboIdentifier() {
		return Base.has(this.model, this.getResource(), IDENTIFIER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bc5941 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboIdentifier(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, IDENTIFIER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bc5941 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboIdentifier( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), IDENTIFIER);
	}

     /**
     * Get all values of property Identifier as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIdentifier_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, IDENTIFIER);
	}
	
    /**
     * Get all values of property Identifier as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIdentifier_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, IDENTIFIER, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Identifier as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIdentifier_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), IDENTIFIER);
	}

    /**
     * Get all values of property Identifier as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIdentifier_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), IDENTIFIER, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Identifier     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboIdentifier(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, IDENTIFIER, java.lang.String.class);
	}
	
    /**
     * Get all values of property Identifier as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboIdentifier_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, IDENTIFIER, java.lang.String.class);
	}

    /**
     * Get all values of property Identifier     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboIdentifier() {
		return Base.getAll(this.model, this.getResource(), IDENTIFIER, java.lang.String.class);
	}

    /**
     * Get all values of property Identifier as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboIdentifier_as() {
		return Base.getAll_as(this.model, this.getResource(), IDENTIFIER, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Identifier as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboIdentifier( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, IDENTIFIER, value);
	}
	
    /**
     * Adds a value to property Identifier as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboIdentifier( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), IDENTIFIER, value);
	}
    /**
     * Adds a value to property Identifier from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboIdentifier(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, IDENTIFIER, value);
	}
	
    /**
     * Adds a value to property Identifier from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboIdentifier(java.lang.String value) {
		Base.add(this.model, this.getResource(), IDENTIFIER, value);
	}
  

    /**
     * Sets a value of property Identifier from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboIdentifier( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, IDENTIFIER, value);
	}
	
    /**
     * Sets a value of property Identifier from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboIdentifier( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), IDENTIFIER, value);
	}
    /**
     * Sets a value of property Identifier from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboIdentifier(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, IDENTIFIER, value);
	}
	
    /**
     * Sets a value of property Identifier from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboIdentifier(java.lang.String value) {
		Base.set(this.model, this.getResource(), IDENTIFIER, value);
	}
  


    /**
     * Removes a value of property Identifier as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboIdentifier( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, IDENTIFIER, value);
	}
	
    /**
     * Removes a value of property Identifier as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboIdentifier( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), IDENTIFIER, value);
	}
    /**
     * Removes a value of property Identifier given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboIdentifier(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, IDENTIFIER, value);
	}
	
    /**
     * Removes a value of property Identifier given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboIdentifier(java.lang.String value) {
		Base.remove(this.model, this.getResource(), IDENTIFIER, value);
	}
  
    /**
     * Removes all values of property Identifier     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboIdentifier( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, IDENTIFIER);
	}
	
    /**
     * Removes all values of property Identifier	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboIdentifier() {
		Base.removeAll(this.model, this.getResource(), IDENTIFIER);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@179ac6 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboIsbn10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, ISBN10);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@179ac6 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboIsbn10() {
		return Base.has(this.model, this.getResource(), ISBN10);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@179ac6 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboIsbn10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, ISBN10);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@179ac6 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboIsbn10( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), ISBN10);
	}

     /**
     * Get all values of property Isbn10 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn10_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, ISBN10);
	}
	
    /**
     * Get all values of property Isbn10 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn10_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISBN10, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Isbn10 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn10_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), ISBN10);
	}

    /**
     * Get all values of property Isbn10 as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn10_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), ISBN10, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Isbn10     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboIsbn10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, ISBN10, java.lang.String.class);
	}
	
    /**
     * Get all values of property Isbn10 as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboIsbn10_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISBN10, java.lang.String.class);
	}

    /**
     * Get all values of property Isbn10     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboIsbn10() {
		return Base.getAll(this.model, this.getResource(), ISBN10, java.lang.String.class);
	}

    /**
     * Get all values of property Isbn10 as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboIsbn10_as() {
		return Base.getAll_as(this.model, this.getResource(), ISBN10, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Isbn10 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboIsbn10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, ISBN10, value);
	}
	
    /**
     * Adds a value to property Isbn10 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboIsbn10( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), ISBN10, value);
	}
    /**
     * Adds a value to property Isbn10 from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboIsbn10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, ISBN10, value);
	}
	
    /**
     * Adds a value to property Isbn10 from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboIsbn10(java.lang.String value) {
		Base.add(this.model, this.getResource(), ISBN10, value);
	}
  

    /**
     * Sets a value of property Isbn10 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboIsbn10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, ISBN10, value);
	}
	
    /**
     * Sets a value of property Isbn10 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboIsbn10( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), ISBN10, value);
	}
    /**
     * Sets a value of property Isbn10 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboIsbn10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, ISBN10, value);
	}
	
    /**
     * Sets a value of property Isbn10 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboIsbn10(java.lang.String value) {
		Base.set(this.model, this.getResource(), ISBN10, value);
	}
  


    /**
     * Removes a value of property Isbn10 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboIsbn10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, ISBN10, value);
	}
	
    /**
     * Removes a value of property Isbn10 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboIsbn10( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), ISBN10, value);
	}
    /**
     * Removes a value of property Isbn10 given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboIsbn10(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, ISBN10, value);
	}
	
    /**
     * Removes a value of property Isbn10 given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboIsbn10(java.lang.String value) {
		Base.remove(this.model, this.getResource(), ISBN10, value);
	}
  
    /**
     * Removes all values of property Isbn10     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboIsbn10( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, ISBN10);
	}
	
    /**
     * Removes all values of property Isbn10	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboIsbn10() {
		Base.removeAll(this.model, this.getResource(), ISBN10);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@16335e1 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboIsbn13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, ISBN13);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@16335e1 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboIsbn13() {
		return Base.has(this.model, this.getResource(), ISBN13);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@16335e1 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboIsbn13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, ISBN13);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@16335e1 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboIsbn13( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), ISBN13);
	}

     /**
     * Get all values of property Isbn13 as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn13_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, ISBN13);
	}
	
    /**
     * Get all values of property Isbn13 as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn13_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISBN13, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Isbn13 as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn13_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), ISBN13);
	}

    /**
     * Get all values of property Isbn13 as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIsbn13_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), ISBN13, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Isbn13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboIsbn13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, ISBN13, java.lang.String.class);
	}
	
    /**
     * Get all values of property Isbn13 as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboIsbn13_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISBN13, java.lang.String.class);
	}

    /**
     * Get all values of property Isbn13     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboIsbn13() {
		return Base.getAll(this.model, this.getResource(), ISBN13, java.lang.String.class);
	}

    /**
     * Get all values of property Isbn13 as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboIsbn13_as() {
		return Base.getAll_as(this.model, this.getResource(), ISBN13, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Isbn13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboIsbn13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, ISBN13, value);
	}
	
    /**
     * Adds a value to property Isbn13 as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboIsbn13( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), ISBN13, value);
	}
    /**
     * Adds a value to property Isbn13 from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboIsbn13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, ISBN13, value);
	}
	
    /**
     * Adds a value to property Isbn13 from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboIsbn13(java.lang.String value) {
		Base.add(this.model, this.getResource(), ISBN13, value);
	}
  

    /**
     * Sets a value of property Isbn13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboIsbn13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, ISBN13, value);
	}
	
    /**
     * Sets a value of property Isbn13 from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboIsbn13( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), ISBN13, value);
	}
    /**
     * Sets a value of property Isbn13 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboIsbn13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, ISBN13, value);
	}
	
    /**
     * Sets a value of property Isbn13 from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboIsbn13(java.lang.String value) {
		Base.set(this.model, this.getResource(), ISBN13, value);
	}
  


    /**
     * Removes a value of property Isbn13 as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboIsbn13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, ISBN13, value);
	}
	
    /**
     * Removes a value of property Isbn13 as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboIsbn13( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), ISBN13, value);
	}
    /**
     * Removes a value of property Isbn13 given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboIsbn13(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, ISBN13, value);
	}
	
    /**
     * Removes a value of property Isbn13 given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboIsbn13(java.lang.String value) {
		Base.remove(this.model, this.getResource(), ISBN13, value);
	}
  
    /**
     * Removes all values of property Isbn13     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboIsbn13( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, ISBN13);
	}
	
    /**
     * Removes all values of property Isbn13	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboIsbn13() {
		Base.removeAll(this.model, this.getResource(), ISBN13);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3bbecb has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboIssn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, ISSN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3bbecb has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboIssn() {
		return Base.has(this.model, this.getResource(), ISSN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3bbecb has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboIssn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, ISSN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3bbecb has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboIssn( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), ISSN);
	}

     /**
     * Get all values of property Issn as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIssn_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, ISSN);
	}
	
    /**
     * Get all values of property Issn as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIssn_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISSN, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Issn as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIssn_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), ISSN);
	}

    /**
     * Get all values of property Issn as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIssn_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), ISSN, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Issn     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboIssn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, ISSN, java.lang.String.class);
	}
	
    /**
     * Get all values of property Issn as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboIssn_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISSN, java.lang.String.class);
	}

    /**
     * Get all values of property Issn     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboIssn() {
		return Base.getAll(this.model, this.getResource(), ISSN, java.lang.String.class);
	}

    /**
     * Get all values of property Issn as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboIssn_as() {
		return Base.getAll_as(this.model, this.getResource(), ISSN, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Issn as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboIssn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, ISSN, value);
	}
	
    /**
     * Adds a value to property Issn as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboIssn( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), ISSN, value);
	}
    /**
     * Adds a value to property Issn from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboIssn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, ISSN, value);
	}
	
    /**
     * Adds a value to property Issn from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboIssn(java.lang.String value) {
		Base.add(this.model, this.getResource(), ISSN, value);
	}
  

    /**
     * Sets a value of property Issn from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboIssn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, ISSN, value);
	}
	
    /**
     * Sets a value of property Issn from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboIssn( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), ISSN, value);
	}
    /**
     * Sets a value of property Issn from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboIssn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, ISSN, value);
	}
	
    /**
     * Sets a value of property Issn from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboIssn(java.lang.String value) {
		Base.set(this.model, this.getResource(), ISSN, value);
	}
  


    /**
     * Removes a value of property Issn as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboIssn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, ISSN, value);
	}
	
    /**
     * Removes a value of property Issn as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboIssn( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), ISSN, value);
	}
    /**
     * Removes a value of property Issn given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboIssn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, ISSN, value);
	}
	
    /**
     * Removes a value of property Issn given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboIssn(java.lang.String value) {
		Base.remove(this.model, this.getResource(), ISSN, value);
	}
  
    /**
     * Removes all values of property Issn     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboIssn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, ISSN);
	}
	
    /**
     * Removes all values of property Issn	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboIssn() {
		Base.removeAll(this.model, this.getResource(), ISSN);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@d9d655 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboIssuer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, ISSUER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@d9d655 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboIssuer() {
		return Base.has(this.model, this.getResource(), ISSUER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@d9d655 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboIssuer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, ISSUER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@d9d655 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboIssuer( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), ISSUER);
	}

     /**
     * Get all values of property Issuer as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIssuer_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, ISSUER);
	}
	
    /**
     * Get all values of property Issuer as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIssuer_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISSUER, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Issuer as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboIssuer_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), ISSUER);
	}

    /**
     * Get all values of property Issuer as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboIssuer_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), ISSUER, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Issuer     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Agent> getAllbiboIssuer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, ISSUER, Agent.class);
	}
	
    /**
     * Get all values of property Issuer as a ReactorResult of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Agent> getAllbiboIssuer_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, ISSUER, Agent.class);
	}

    /**
     * Get all values of property Issuer     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Agent> getAllbiboIssuer() {
		return Base.getAll(this.model, this.getResource(), ISSUER, Agent.class);
	}

    /**
     * Get all values of property Issuer as a ReactorResult of Agent 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Agent> getAllbiboIssuer_as() {
		return Base.getAll_as(this.model, this.getResource(), ISSUER, Agent.class);
	}
 
    /**
     * Adds a value to property Issuer as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboIssuer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, ISSUER, value);
	}
	
    /**
     * Adds a value to property Issuer as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboIssuer( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), ISSUER, value);
	}
    /**
     * Adds a value to property Issuer from an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboIssuer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.add(model, instanceResource, ISSUER, value);
	}
	
    /**
     * Adds a value to property Issuer from an instance of Agent 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboIssuer(Agent value) {
		Base.add(this.model, this.getResource(), ISSUER, value);
	}
  

    /**
     * Sets a value of property Issuer from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboIssuer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, ISSUER, value);
	}
	
    /**
     * Sets a value of property Issuer from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboIssuer( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), ISSUER, value);
	}
    /**
     * Sets a value of property Issuer from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboIssuer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.set(model, instanceResource, ISSUER, value);
	}
	
    /**
     * Sets a value of property Issuer from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboIssuer(Agent value) {
		Base.set(this.model, this.getResource(), ISSUER, value);
	}
  


    /**
     * Removes a value of property Issuer as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboIssuer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, ISSUER, value);
	}
	
    /**
     * Removes a value of property Issuer as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboIssuer( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), ISSUER, value);
	}
    /**
     * Removes a value of property Issuer given as an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboIssuer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.remove(model, instanceResource, ISSUER, value);
	}
	
    /**
     * Removes a value of property Issuer given as an instance of Agent 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboIssuer(Agent value) {
		Base.remove(this.model, this.getResource(), ISSUER, value);
	}
  
    /**
     * Removes all values of property Issuer     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboIssuer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, ISSUER);
	}
	
    /**
     * Removes all values of property Issuer	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboIssuer() {
		Base.removeAll(this.model, this.getResource(), ISSUER);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bbf142 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboLccn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, LCCN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bbf142 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboLccn() {
		return Base.has(this.model, this.getResource(), LCCN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bbf142 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboLccn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, LCCN);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bbf142 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboLccn( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), LCCN);
	}

     /**
     * Get all values of property Lccn as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboLccn_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, LCCN);
	}
	
    /**
     * Get all values of property Lccn as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboLccn_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, LCCN, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Lccn as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboLccn_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), LCCN);
	}

    /**
     * Get all values of property Lccn as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboLccn_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), LCCN, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Lccn     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboLccn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, LCCN, java.lang.String.class);
	}
	
    /**
     * Get all values of property Lccn as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboLccn_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, LCCN, java.lang.String.class);
	}

    /**
     * Get all values of property Lccn     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboLccn() {
		return Base.getAll(this.model, this.getResource(), LCCN, java.lang.String.class);
	}

    /**
     * Get all values of property Lccn as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboLccn_as() {
		return Base.getAll_as(this.model, this.getResource(), LCCN, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Lccn as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboLccn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, LCCN, value);
	}
	
    /**
     * Adds a value to property Lccn as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboLccn( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), LCCN, value);
	}
    /**
     * Adds a value to property Lccn from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboLccn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, LCCN, value);
	}
	
    /**
     * Adds a value to property Lccn from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboLccn(java.lang.String value) {
		Base.add(this.model, this.getResource(), LCCN, value);
	}
  

    /**
     * Sets a value of property Lccn from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboLccn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, LCCN, value);
	}
	
    /**
     * Sets a value of property Lccn from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboLccn( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), LCCN, value);
	}
    /**
     * Sets a value of property Lccn from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboLccn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, LCCN, value);
	}
	
    /**
     * Sets a value of property Lccn from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboLccn(java.lang.String value) {
		Base.set(this.model, this.getResource(), LCCN, value);
	}
  


    /**
     * Removes a value of property Lccn as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboLccn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, LCCN, value);
	}
	
    /**
     * Removes a value of property Lccn as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboLccn( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), LCCN, value);
	}
    /**
     * Removes a value of property Lccn given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboLccn(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, LCCN, value);
	}
	
    /**
     * Removes a value of property Lccn given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboLccn(java.lang.String value) {
		Base.remove(this.model, this.getResource(), LCCN, value);
	}
  
    /**
     * Removes all values of property Lccn     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboLccn( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, LCCN);
	}
	
    /**
     * Removes all values of property Lccn	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboLccn() {
		Base.removeAll(this.model, this.getResource(), LCCN);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@e2fd12 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboOclcnum(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, OCLCNUM);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@e2fd12 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboOclcnum() {
		return Base.has(this.model, this.getResource(), OCLCNUM);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@e2fd12 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboOclcnum(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, OCLCNUM);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@e2fd12 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboOclcnum( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), OCLCNUM);
	}

     /**
     * Get all values of property Oclcnum as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboOclcnum_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, OCLCNUM);
	}
	
    /**
     * Get all values of property Oclcnum as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboOclcnum_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, OCLCNUM, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Oclcnum as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboOclcnum_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), OCLCNUM);
	}

    /**
     * Get all values of property Oclcnum as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboOclcnum_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), OCLCNUM, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Oclcnum     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboOclcnum(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, OCLCNUM, java.lang.String.class);
	}
	
    /**
     * Get all values of property Oclcnum as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboOclcnum_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, OCLCNUM, java.lang.String.class);
	}

    /**
     * Get all values of property Oclcnum     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboOclcnum() {
		return Base.getAll(this.model, this.getResource(), OCLCNUM, java.lang.String.class);
	}

    /**
     * Get all values of property Oclcnum as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboOclcnum_as() {
		return Base.getAll_as(this.model, this.getResource(), OCLCNUM, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Oclcnum as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboOclcnum( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, OCLCNUM, value);
	}
	
    /**
     * Adds a value to property Oclcnum as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboOclcnum( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), OCLCNUM, value);
	}
    /**
     * Adds a value to property Oclcnum from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboOclcnum(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, OCLCNUM, value);
	}
	
    /**
     * Adds a value to property Oclcnum from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboOclcnum(java.lang.String value) {
		Base.add(this.model, this.getResource(), OCLCNUM, value);
	}
  

    /**
     * Sets a value of property Oclcnum from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboOclcnum( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, OCLCNUM, value);
	}
	
    /**
     * Sets a value of property Oclcnum from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboOclcnum( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), OCLCNUM, value);
	}
    /**
     * Sets a value of property Oclcnum from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboOclcnum(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, OCLCNUM, value);
	}
	
    /**
     * Sets a value of property Oclcnum from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboOclcnum(java.lang.String value) {
		Base.set(this.model, this.getResource(), OCLCNUM, value);
	}
  


    /**
     * Removes a value of property Oclcnum as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboOclcnum( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, OCLCNUM, value);
	}
	
    /**
     * Removes a value of property Oclcnum as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboOclcnum( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), OCLCNUM, value);
	}
    /**
     * Removes a value of property Oclcnum given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboOclcnum(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, OCLCNUM, value);
	}
	
    /**
     * Removes a value of property Oclcnum given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboOclcnum(java.lang.String value) {
		Base.remove(this.model, this.getResource(), OCLCNUM, value);
	}
  
    /**
     * Removes all values of property Oclcnum     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboOclcnum( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, OCLCNUM);
	}
	
    /**
     * Removes all values of property Oclcnum	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboOclcnum() {
		Base.removeAll(this.model, this.getResource(), OCLCNUM);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@82bf92 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboOwner(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, OWNER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@82bf92 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboOwner() {
		return Base.has(this.model, this.getResource(), OWNER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@82bf92 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboOwner(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, OWNER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@82bf92 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboOwner( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), OWNER);
	}

     /**
     * Get all values of property Owner as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboOwner_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, OWNER);
	}
	
    /**
     * Get all values of property Owner as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboOwner_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, OWNER, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Owner as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboOwner_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), OWNER);
	}

    /**
     * Get all values of property Owner as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboOwner_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), OWNER, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Owner     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Agent> getAllbiboOwner(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, OWNER, Agent.class);
	}
	
    /**
     * Get all values of property Owner as a ReactorResult of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Agent> getAllbiboOwner_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, OWNER, Agent.class);
	}

    /**
     * Get all values of property Owner     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Agent> getAllbiboOwner() {
		return Base.getAll(this.model, this.getResource(), OWNER, Agent.class);
	}

    /**
     * Get all values of property Owner as a ReactorResult of Agent 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Agent> getAllbiboOwner_as() {
		return Base.getAll_as(this.model, this.getResource(), OWNER, Agent.class);
	}
 
    /**
     * Adds a value to property Owner as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboOwner( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, OWNER, value);
	}
	
    /**
     * Adds a value to property Owner as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboOwner( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), OWNER, value);
	}
    /**
     * Adds a value to property Owner from an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboOwner(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.add(model, instanceResource, OWNER, value);
	}
	
    /**
     * Adds a value to property Owner from an instance of Agent 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboOwner(Agent value) {
		Base.add(this.model, this.getResource(), OWNER, value);
	}
  

    /**
     * Sets a value of property Owner from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboOwner( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, OWNER, value);
	}
	
    /**
     * Sets a value of property Owner from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboOwner( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), OWNER, value);
	}
    /**
     * Sets a value of property Owner from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboOwner(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.set(model, instanceResource, OWNER, value);
	}
	
    /**
     * Sets a value of property Owner from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboOwner(Agent value) {
		Base.set(this.model, this.getResource(), OWNER, value);
	}
  


    /**
     * Removes a value of property Owner as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboOwner( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, OWNER, value);
	}
	
    /**
     * Removes a value of property Owner as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboOwner( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), OWNER, value);
	}
    /**
     * Removes a value of property Owner given as an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboOwner(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.remove(model, instanceResource, OWNER, value);
	}
	
    /**
     * Removes a value of property Owner given as an instance of Agent 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboOwner(Agent value) {
		Base.remove(this.model, this.getResource(), OWNER, value);
	}
  
    /**
     * Removes all values of property Owner     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboOwner( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, OWNER);
	}
	
    /**
     * Removes all values of property Owner	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboOwner() {
		Base.removeAll(this.model, this.getResource(), OWNER);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ecfd56 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboPmid(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, PMID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ecfd56 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboPmid() {
		return Base.has(this.model, this.getResource(), PMID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ecfd56 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboPmid(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, PMID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@ecfd56 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboPmid( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), PMID);
	}

     /**
     * Get all values of property Pmid as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboPmid_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, PMID);
	}
	
    /**
     * Get all values of property Pmid as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboPmid_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PMID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Pmid as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboPmid_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), PMID);
	}

    /**
     * Get all values of property Pmid as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboPmid_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), PMID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Pmid     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboPmid(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PMID, java.lang.String.class);
	}
	
    /**
     * Get all values of property Pmid as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboPmid_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PMID, java.lang.String.class);
	}

    /**
     * Get all values of property Pmid     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboPmid() {
		return Base.getAll(this.model, this.getResource(), PMID, java.lang.String.class);
	}

    /**
     * Get all values of property Pmid as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboPmid_as() {
		return Base.getAll_as(this.model, this.getResource(), PMID, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Pmid as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboPmid( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PMID, value);
	}
	
    /**
     * Adds a value to property Pmid as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboPmid( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PMID, value);
	}
    /**
     * Adds a value to property Pmid from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboPmid(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, PMID, value);
	}
	
    /**
     * Adds a value to property Pmid from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboPmid(java.lang.String value) {
		Base.add(this.model, this.getResource(), PMID, value);
	}
  

    /**
     * Sets a value of property Pmid from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboPmid( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PMID, value);
	}
	
    /**
     * Sets a value of property Pmid from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboPmid( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PMID, value);
	}
    /**
     * Sets a value of property Pmid from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboPmid(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, PMID, value);
	}
	
    /**
     * Sets a value of property Pmid from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboPmid(java.lang.String value) {
		Base.set(this.model, this.getResource(), PMID, value);
	}
  


    /**
     * Removes a value of property Pmid as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboPmid( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PMID, value);
	}
	
    /**
     * Removes a value of property Pmid as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboPmid( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PMID, value);
	}
    /**
     * Removes a value of property Pmid given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboPmid(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, PMID, value);
	}
	
    /**
     * Removes a value of property Pmid given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboPmid(java.lang.String value) {
		Base.remove(this.model, this.getResource(), PMID, value);
	}
  
    /**
     * Removes all values of property Pmid     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboPmid( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PMID);
	}
	
    /**
     * Removes all values of property Pmid	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboPmid() {
		Base.removeAll(this.model, this.getResource(), PMID);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b94a07 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboProducer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, PRODUCER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b94a07 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboProducer() {
		return Base.has(this.model, this.getResource(), PRODUCER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b94a07 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboProducer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, PRODUCER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b94a07 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboProducer( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), PRODUCER);
	}

     /**
     * Get all values of property Producer as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboProducer_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, PRODUCER);
	}
	
    /**
     * Get all values of property Producer as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboProducer_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PRODUCER, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Producer as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboProducer_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), PRODUCER);
	}

    /**
     * Get all values of property Producer as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboProducer_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), PRODUCER, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Producer     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Agent> getAllbiboProducer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PRODUCER, Agent.class);
	}
	
    /**
     * Get all values of property Producer as a ReactorResult of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Agent> getAllbiboProducer_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PRODUCER, Agent.class);
	}

    /**
     * Get all values of property Producer     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Agent> getAllbiboProducer() {
		return Base.getAll(this.model, this.getResource(), PRODUCER, Agent.class);
	}

    /**
     * Get all values of property Producer as a ReactorResult of Agent 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Agent> getAllbiboProducer_as() {
		return Base.getAll_as(this.model, this.getResource(), PRODUCER, Agent.class);
	}
 
    /**
     * Adds a value to property Producer as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboProducer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PRODUCER, value);
	}
	
    /**
     * Adds a value to property Producer as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboProducer( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PRODUCER, value);
	}
    /**
     * Adds a value to property Producer from an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboProducer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.add(model, instanceResource, PRODUCER, value);
	}
	
    /**
     * Adds a value to property Producer from an instance of Agent 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboProducer(Agent value) {
		Base.add(this.model, this.getResource(), PRODUCER, value);
	}
  

    /**
     * Sets a value of property Producer from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboProducer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PRODUCER, value);
	}
	
    /**
     * Sets a value of property Producer from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboProducer( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PRODUCER, value);
	}
    /**
     * Sets a value of property Producer from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboProducer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.set(model, instanceResource, PRODUCER, value);
	}
	
    /**
     * Sets a value of property Producer from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboProducer(Agent value) {
		Base.set(this.model, this.getResource(), PRODUCER, value);
	}
  


    /**
     * Removes a value of property Producer as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboProducer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PRODUCER, value);
	}
	
    /**
     * Removes a value of property Producer as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboProducer( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PRODUCER, value);
	}
    /**
     * Removes a value of property Producer given as an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboProducer(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.remove(model, instanceResource, PRODUCER, value);
	}
	
    /**
     * Removes a value of property Producer given as an instance of Agent 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboProducer(Agent value) {
		Base.remove(this.model, this.getResource(), PRODUCER, value);
	}
  
    /**
     * Removes all values of property Producer     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboProducer( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PRODUCER);
	}
	
    /**
     * Removes all values of property Producer	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboProducer() {
		Base.removeAll(this.model, this.getResource(), PRODUCER);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10a7f8e has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboSici(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, SICI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10a7f8e has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboSici() {
		return Base.has(this.model, this.getResource(), SICI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10a7f8e has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboSici(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, SICI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@10a7f8e has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboSici( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), SICI);
	}

     /**
     * Get all values of property Sici as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboSici_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, SICI);
	}
	
    /**
     * Get all values of property Sici as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboSici_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, SICI, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Sici as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboSici_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), SICI);
	}

    /**
     * Get all values of property Sici as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboSici_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), SICI, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Sici     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboSici(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, SICI, java.lang.String.class);
	}
	
    /**
     * Get all values of property Sici as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboSici_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, SICI, java.lang.String.class);
	}

    /**
     * Get all values of property Sici     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboSici() {
		return Base.getAll(this.model, this.getResource(), SICI, java.lang.String.class);
	}

    /**
     * Get all values of property Sici as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboSici_as() {
		return Base.getAll_as(this.model, this.getResource(), SICI, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Sici as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboSici( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, SICI, value);
	}
	
    /**
     * Adds a value to property Sici as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboSici( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), SICI, value);
	}
    /**
     * Adds a value to property Sici from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboSici(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, SICI, value);
	}
	
    /**
     * Adds a value to property Sici from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboSici(java.lang.String value) {
		Base.add(this.model, this.getResource(), SICI, value);
	}
  

    /**
     * Sets a value of property Sici from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboSici( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, SICI, value);
	}
	
    /**
     * Sets a value of property Sici from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboSici( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), SICI, value);
	}
    /**
     * Sets a value of property Sici from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboSici(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, SICI, value);
	}
	
    /**
     * Sets a value of property Sici from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboSici(java.lang.String value) {
		Base.set(this.model, this.getResource(), SICI, value);
	}
  


    /**
     * Removes a value of property Sici as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboSici( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, SICI, value);
	}
	
    /**
     * Removes a value of property Sici as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboSici( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), SICI, value);
	}
    /**
     * Removes a value of property Sici given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboSici(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, SICI, value);
	}
	
    /**
     * Removes a value of property Sici given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboSici(java.lang.String value) {
		Base.remove(this.model, this.getResource(), SICI, value);
	}
  
    /**
     * Removes all values of property Sici     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboSici( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, SICI);
	}
	
    /**
     * Removes all values of property Sici	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboSici() {
		Base.removeAll(this.model, this.getResource(), SICI);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c5f2a8 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboTranslator(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, TRANSLATOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c5f2a8 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboTranslator() {
		return Base.has(this.model, this.getResource(), TRANSLATOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c5f2a8 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboTranslator(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, TRANSLATOR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c5f2a8 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboTranslator( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), TRANSLATOR);
	}

     /**
     * Get all values of property Translator as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboTranslator_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, TRANSLATOR);
	}
	
    /**
     * Get all values of property Translator as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboTranslator_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, TRANSLATOR, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Translator as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboTranslator_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), TRANSLATOR);
	}

    /**
     * Get all values of property Translator as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboTranslator_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), TRANSLATOR, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Translator     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Agent> getAllbiboTranslator(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, TRANSLATOR, Agent.class);
	}
	
    /**
     * Get all values of property Translator as a ReactorResult of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Agent> getAllbiboTranslator_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, TRANSLATOR, Agent.class);
	}

    /**
     * Get all values of property Translator     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Agent> getAllbiboTranslator() {
		return Base.getAll(this.model, this.getResource(), TRANSLATOR, Agent.class);
	}

    /**
     * Get all values of property Translator as a ReactorResult of Agent 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Agent> getAllbiboTranslator_as() {
		return Base.getAll_as(this.model, this.getResource(), TRANSLATOR, Agent.class);
	}
 
    /**
     * Adds a value to property Translator as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboTranslator( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, TRANSLATOR, value);
	}
	
    /**
     * Adds a value to property Translator as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboTranslator( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), TRANSLATOR, value);
	}
    /**
     * Adds a value to property Translator from an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboTranslator(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.add(model, instanceResource, TRANSLATOR, value);
	}
	
    /**
     * Adds a value to property Translator from an instance of Agent 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboTranslator(Agent value) {
		Base.add(this.model, this.getResource(), TRANSLATOR, value);
	}
  

    /**
     * Sets a value of property Translator from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboTranslator( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, TRANSLATOR, value);
	}
	
    /**
     * Sets a value of property Translator from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboTranslator( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), TRANSLATOR, value);
	}
    /**
     * Sets a value of property Translator from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboTranslator(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.set(model, instanceResource, TRANSLATOR, value);
	}
	
    /**
     * Sets a value of property Translator from an instance of Agent 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboTranslator(Agent value) {
		Base.set(this.model, this.getResource(), TRANSLATOR, value);
	}
  


    /**
     * Removes a value of property Translator as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboTranslator( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, TRANSLATOR, value);
	}
	
    /**
     * Removes a value of property Translator as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboTranslator( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), TRANSLATOR, value);
	}
    /**
     * Removes a value of property Translator given as an instance of Agent 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboTranslator(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Agent value) {
		Base.remove(model, instanceResource, TRANSLATOR, value);
	}
	
    /**
     * Removes a value of property Translator given as an instance of Agent 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboTranslator(Agent value) {
		Base.remove(this.model, this.getResource(), TRANSLATOR, value);
	}
  
    /**
     * Removes all values of property Translator     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboTranslator( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, TRANSLATOR);
	}
	
    /**
     * Removes all values of property Translator	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboTranslator() {
		Base.removeAll(this.model, this.getResource(), TRANSLATOR);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@a62e67 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboUpc(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, UPC);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@a62e67 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboUpc() {
		return Base.has(this.model, this.getResource(), UPC);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@a62e67 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboUpc(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, UPC);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@a62e67 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboUpc( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), UPC);
	}

     /**
     * Get all values of property Upc as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboUpc_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, UPC);
	}
	
    /**
     * Get all values of property Upc as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboUpc_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, UPC, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Upc as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboUpc_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), UPC);
	}

    /**
     * Get all values of property Upc as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboUpc_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), UPC, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Upc     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboUpc(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, UPC, java.lang.String.class);
	}
	
    /**
     * Get all values of property Upc as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboUpc_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, UPC, java.lang.String.class);
	}

    /**
     * Get all values of property Upc     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboUpc() {
		return Base.getAll(this.model, this.getResource(), UPC, java.lang.String.class);
	}

    /**
     * Get all values of property Upc as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboUpc_as() {
		return Base.getAll_as(this.model, this.getResource(), UPC, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Upc as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboUpc( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, UPC, value);
	}
	
    /**
     * Adds a value to property Upc as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboUpc( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), UPC, value);
	}
    /**
     * Adds a value to property Upc from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboUpc(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, UPC, value);
	}
	
    /**
     * Adds a value to property Upc from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboUpc(java.lang.String value) {
		Base.add(this.model, this.getResource(), UPC, value);
	}
  

    /**
     * Sets a value of property Upc from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboUpc( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, UPC, value);
	}
	
    /**
     * Sets a value of property Upc from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboUpc( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), UPC, value);
	}
    /**
     * Sets a value of property Upc from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboUpc(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, UPC, value);
	}
	
    /**
     * Sets a value of property Upc from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboUpc(java.lang.String value) {
		Base.set(this.model, this.getResource(), UPC, value);
	}
  


    /**
     * Removes a value of property Upc as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboUpc( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, UPC, value);
	}
	
    /**
     * Removes a value of property Upc as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboUpc( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), UPC, value);
	}
    /**
     * Removes a value of property Upc given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboUpc(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, UPC, value);
	}
	
    /**
     * Removes a value of property Upc given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboUpc(java.lang.String value) {
		Base.remove(this.model, this.getResource(), UPC, value);
	}
  
    /**
     * Removes all values of property Upc     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboUpc( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, UPC);
	}
	
    /**
     * Removes all values of property Upc	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboUpc() {
		Base.removeAll(this.model, this.getResource(), UPC);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@15c5c13 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasbiboUri(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, URI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@15c5c13 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasbiboUri() {
		return Base.has(this.model, this.getResource(), URI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@15c5c13 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasbiboUri(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, URI);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@15c5c13 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasbiboUri( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), URI);
	}

     /**
     * Get all values of property Uri as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboUri_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, URI);
	}
	
    /**
     * Get all values of property Uri as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboUri_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, URI, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Uri as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllbiboUri_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), URI);
	}

    /**
     * Get all values of property Uri as a ReactorResult of RDF2Go nodes 
     * @return a ListE of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllbiboUri_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), URI, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Uri     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllbiboUri(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, URI, java.lang.String.class);
	}
	
    /**
     * Get all values of property Uri as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllbiboUri_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, URI, java.lang.String.class);
	}

    /**
     * Get all values of property Uri     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllbiboUri() {
		return Base.getAll(this.model, this.getResource(), URI, java.lang.String.class);
	}

    /**
     * Get all values of property Uri as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllbiboUri_as() {
		return Base.getAll_as(this.model, this.getResource(), URI, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Uri as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addbiboUri( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, URI, value);
	}
	
    /**
     * Adds a value to property Uri as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addbiboUri( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), URI, value);
	}
    /**
     * Adds a value to property Uri from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addbiboUri(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, URI, value);
	}
	
    /**
     * Adds a value to property Uri from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addbiboUri(java.lang.String value) {
		Base.add(this.model, this.getResource(), URI, value);
	}
  

    /**
     * Sets a value of property Uri from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setbiboUri( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, URI, value);
	}
	
    /**
     * Sets a value of property Uri from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setbiboUri( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), URI, value);
	}
    /**
     * Sets a value of property Uri from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setbiboUri(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, URI, value);
	}
	
    /**
     * Sets a value of property Uri from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setbiboUri(java.lang.String value) {
		Base.set(this.model, this.getResource(), URI, value);
	}
  


    /**
     * Removes a value of property Uri as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removebiboUri( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, URI, value);
	}
	
    /**
     * Removes a value of property Uri as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removebiboUri( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), URI, value);
	}
    /**
     * Removes a value of property Uri given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removebiboUri(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, URI, value);
	}
	
    /**
     * Removes a value of property Uri given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removebiboUri(java.lang.String value) {
		Base.remove(this.model, this.getResource(), URI, value);
	}
  
    /**
     * Removes all values of property Uri     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllbiboUri( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, URI);
	}
	
    /**
     * Removes all values of property Uri	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllbiboUri() {
		Base.removeAll(this.model, this.getResource(), URI);
	}
 }