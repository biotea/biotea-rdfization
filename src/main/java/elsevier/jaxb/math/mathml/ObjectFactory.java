//
// This file was pubmed.openAccess.jaxb.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.06.04 at 07:58:30 PM BST 
//


package elsevier.jaxb.math.mathml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * pubmed.openAccess.jaxb.generated in the elsevier.jaxb.math.mathml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Xor_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "xor");
    private final static QName _Max_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "max");
    private final static QName _Min_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "min");
    private final static QName _Arctan_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arctan");
    private final static QName _Leq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "leq");
    private final static QName _Divide_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "divide");
    private final static QName _True_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "true");
    private final static QName _Product_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "product");
    private final static QName _Arcsin_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsin");
    private final static QName _Csc_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "csc");
    private final static QName _Sec_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sec");
    private final static QName _Sin_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sin");
    private final static QName _Factorial_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "factorial");
    private final static QName _Primes_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "primes");
    private final static QName _Rem_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "rem");
    private final static QName _Exists_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "exists");
    private final static QName _Emptyset_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "emptyset");
    private final static QName _Arccosh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccosh");
    private final static QName _Eq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "eq");
    private final static QName _Gcd_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "gcd");
    private final static QName _Imaginaryi_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "imaginaryi");
    private final static QName _Equivalent_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "equivalent");
    private final static QName _Ln_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ln");
    private final static QName _Implies_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "implies");
    private final static QName _Imaginary_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "imaginary");
    private final static QName _Lt_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "lt");
    private final static QName _Neq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "neq");
    private final static QName _Sum_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sum");
    private final static QName _Infinity_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "infinity");
    private final static QName _Arcsech_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsech");
    private final static QName _Approx_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "approx");
    private final static QName _Real_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "real");
    private final static QName _Ident_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ident");
    private final static QName _Times_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "times");
    private final static QName _Domain_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "domain");
    private final static QName _Arccoth_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccoth");
    private final static QName _Csch_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "csch");
    private final static QName _Minus_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "minus");
    private final static QName _Cosh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cosh");
    private final static QName _Geq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "geq");
    private final static QName _Plus_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "plus");
    private final static QName _Or_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "or");
    private final static QName _Arccsch_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccsch");
    private final static QName _Sech_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sech");
    private final static QName _Arctanh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arctanh");
    private final static QName _Sinh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sinh");
    private final static QName _Image_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "image");
    private final static QName _Arccsc_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccsc");
    private final static QName _Factorof_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "factorof");
    private final static QName _And_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "and");
    private final static QName _Exponentiale_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "exponentiale");
    private final static QName _Conjugate_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "conjugate");
    private final static QName _Forall_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "forall");
    private final static QName _Log_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "log");
    private final static QName _Not_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "not");
    private final static QName _Exp_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "exp");
    private final static QName _Floor_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "floor");
    private final static QName _Ceiling_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ceiling");
    private final static QName _Rationals_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "rationals");
    private final static QName _Gt_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "gt");
    private final static QName _Tan_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "tan");
    private final static QName _Pi_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "pi");
    private final static QName _Coth_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "coth");
    private final static QName _Integers_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "integers");
    private final static QName _Complexes_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "complexes");
    private final static QName _Arcsinh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsinh");
    private final static QName _Quotient_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "quotient");
    private final static QName _Arccot_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccot");
    private final static QName _Arccos_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccos");
    private final static QName _Cos_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cos");
    private final static QName _Root_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "root");
    private final static QName _Cot_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cot");
    private final static QName _Reals_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "reals");
    private final static QName _Naturalnumbers_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "naturalnumbers");
    private final static QName _Lcm_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "lcm");
    private final static QName _Abs_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "abs");
    private final static QName _Tanh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "tanh");
    private final static QName _Arg_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arg");
    private final static QName _Notanumber_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "notanumber");
    private final static QName _Arcsec_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsec");
    private final static QName _Codomain_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "codomain");
    private final static QName _Compose_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "compose");
    private final static QName _Power_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "power");
    private final static QName _False_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "false");
    private final static QName _Eulergamma_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "eulergamma");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: elsevier.jaxb.math.mathml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Ms }
     * 
     */
    public Ms createMs() {
        return new Ms();
    }

    /**
     * Create an instance of {@link Mstyle }
     * 
     */
    public Mstyle createMstyle() {
        return new Mstyle();
    }

    /**
     * Create an instance of {@link Sdev }
     * 
     */
    public Sdev createSdev() {
        return new Sdev();
    }

    /**
     * Create an instance of {@link Laplacian }
     * 
     */
    public Laplacian createLaplacian() {
        return new Laplacian();
    }

    /**
     * Create an instance of {@link Sep }
     * 
     */
    public Sep createSep() {
        return new Sep();
    }

    /**
     * Create an instance of {@link FunctionsType }
     * 
     */
    public FunctionsType createFunctionsType() {
        return new FunctionsType();
    }

    /**
     * Create an instance of {@link Condition }
     * 
     */
    public Condition createCondition() {
        return new Condition();
    }

    /**
     * Create an instance of {@link Momentabout }
     * 
     */
    public Momentabout createMomentabout() {
        return new Momentabout();
    }

    /**
     * Create an instance of {@link Menclose }
     * 
     */
    public Menclose createMenclose() {
        return new Menclose();
    }

    /**
     * Create an instance of {@link Divergence }
     * 
     */
    public Divergence createDivergence() {
        return new Divergence();
    }

    /**
     * Create an instance of {@link Notprsubset }
     * 
     */
    public Notprsubset createNotprsubset() {
        return new Notprsubset();
    }

    /**
     * Create an instance of {@link Intersect }
     * 
     */
    public Intersect createIntersect() {
        return new Intersect();
    }

    /**
     * Create an instance of {@link Mmultiscripts }
     * 
     */
    public Mmultiscripts createMmultiscripts() {
        return new Mmultiscripts();
    }

    /**
     * Create an instance of {@link Mlabeledtr }
     * 
     */
    public Mlabeledtr createMlabeledtr() {
        return new Mlabeledtr();
    }

    /**
     * Create an instance of {@link Interval }
     * 
     */
    public Interval createInterval() {
        return new Interval();
    }

    /**
     * Create an instance of {@link Lambda }
     * 
     */
    public Lambda createLambda() {
        return new Lambda();
    }

    /**
     * Create an instance of {@link Msubsup }
     * 
     */
    public Msubsup createMsubsup() {
        return new Msubsup();
    }

    /**
     * Create an instance of {@link Malignmark }
     * 
     */
    public Malignmark createMalignmark() {
        return new Malignmark();
    }

    /**
     * Create an instance of {@link Piece }
     * 
     */
    public Piece createPiece() {
        return new Piece();
    }

    /**
     * Create an instance of {@link Limit }
     * 
     */
    public Limit createLimit() {
        return new Limit();
    }

    /**
     * Create an instance of {@link Median }
     * 
     */
    public Median createMedian() {
        return new Median();
    }

    /**
     * Create an instance of {@link Union }
     * 
     */
    public Union createUnion() {
        return new Union();
    }

    /**
     * Create an instance of {@link Piecewise }
     * 
     */
    public Piecewise createPiecewise() {
        return new Piecewise();
    }

    /**
     * Create an instance of {@link Tendsto }
     * 
     */
    public Tendsto createTendsto() {
        return new Tendsto();
    }

    /**
     * Create an instance of {@link Vector }
     * 
     */
    public Vector createVector() {
        return new Vector();
    }

    /**
     * Create an instance of {@link RelationsType }
     * 
     */
    public RelationsType createRelationsType() {
        return new RelationsType();
    }

    /**
     * Create an instance of {@link Vectorproduct }
     * 
     */
    public Vectorproduct createVectorproduct() {
        return new Vectorproduct();
    }

    /**
     * Create an instance of {@link Moment }
     * 
     */
    public Moment createMoment() {
        return new Moment();
    }

    /**
     * Create an instance of {@link Mi }
     * 
     */
    public Mi createMi() {
        return new Mi();
    }

    /**
     * Create an instance of {@link Cn }
     * 
     */
    public Cn createCn() {
        return new Cn();
    }

    /**
     * Create an instance of {@link Mean }
     * 
     */
    public Mean createMean() {
        return new Mean();
    }

    /**
     * Create an instance of {@link Determinant }
     * 
     */
    public Determinant createDeterminant() {
        return new Determinant();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link Mo }
     * 
     */
    public Mo createMo() {
        return new Mo();
    }

    /**
     * Create an instance of {@link Transpose }
     * 
     */
    public Transpose createTranspose() {
        return new Transpose();
    }

    /**
     * Create an instance of {@link List }
     * 
     */
    public List createList() {
        return new List();
    }

    /**
     * Create an instance of {@link Mroot }
     * 
     */
    public Mroot createMroot() {
        return new Mroot();
    }

    /**
     * Create an instance of {@link Mover }
     * 
     */
    public Mover createMover() {
        return new Mover();
    }

    /**
     * Create an instance of {@link Munder }
     * 
     */
    public Munder createMunder() {
        return new Munder();
    }

    /**
     * Create an instance of {@link Mfenced }
     * 
     */
    public Mfenced createMfenced() {
        return new Mfenced();
    }

    /**
     * Create an instance of {@link Set }
     * 
     */
    public Set createSet() {
        return new Set();
    }

    /**
     * Create an instance of {@link Mode }
     * 
     */
    public Mode createMode() {
        return new Mode();
    }

    /**
     * Create an instance of {@link Notin }
     * 
     */
    public Notin createNotin() {
        return new Notin();
    }

    /**
     * Create an instance of {@link Declare }
     * 
     */
    public Declare createDeclare() {
        return new Declare();
    }

    /**
     * Create an instance of {@link Mglyph }
     * 
     */
    public Mglyph createMglyph() {
        return new Mglyph();
    }

    /**
     * Create an instance of {@link Subset }
     * 
     */
    public Subset createSubset() {
        return new Subset();
    }

    /**
     * Create an instance of {@link Bvar }
     * 
     */
    public Bvar createBvar() {
        return new Bvar();
    }

    /**
     * Create an instance of {@link Msup }
     * 
     */
    public Msup createMsup() {
        return new Msup();
    }

    /**
     * Create an instance of {@link Matrixrow }
     * 
     */
    public Matrixrow createMatrixrow() {
        return new Matrixrow();
    }

    /**
     * Create an instance of {@link Mfrac }
     * 
     */
    public Mfrac createMfrac() {
        return new Mfrac();
    }

    /**
     * Create an instance of {@link Matrix }
     * 
     */
    public Matrix createMatrix() {
        return new Matrix();
    }

    /**
     * Create an instance of {@link Curl }
     * 
     */
    public Curl createCurl() {
        return new Curl();
    }

    /**
     * Create an instance of {@link Semantics }
     * 
     */
    public Semantics createSemantics() {
        return new Semantics();
    }

    /**
     * Create an instance of {@link Logbase }
     * 
     */
    public Logbase createLogbase() {
        return new Logbase();
    }

    /**
     * Create an instance of {@link Diff }
     * 
     */
    public Diff createDiff() {
        return new Diff();
    }

    /**
     * Create an instance of {@link Prsubset }
     * 
     */
    public Prsubset createPrsubset() {
        return new Prsubset();
    }

    /**
     * Create an instance of {@link Domainofapplication }
     * 
     */
    public Domainofapplication createDomainofapplication() {
        return new Domainofapplication();
    }

    /**
     * Create an instance of {@link Partialdiff }
     * 
     */
    public Partialdiff createPartialdiff() {
        return new Partialdiff();
    }

    /**
     * Create an instance of {@link AnnotationXml }
     * 
     */
    public AnnotationXml createAnnotationXml() {
        return new AnnotationXml();
    }

    /**
     * Create an instance of {@link Degree }
     * 
     */
    public Degree createDegree() {
        return new Degree();
    }

    /**
     * Create an instance of {@link Mprescripts }
     * 
     */
    public Mprescripts createMprescripts() {
        return new Mprescripts();
    }

    /**
     * Create an instance of {@link Grad }
     * 
     */
    public Grad createGrad() {
        return new Grad();
    }

    /**
     * Create an instance of {@link Munderover }
     * 
     */
    public Munderover createMunderover() {
        return new Munderover();
    }

    /**
     * Create an instance of {@link Card }
     * 
     */
    public Card createCard() {
        return new Card();
    }

    /**
     * Create an instance of {@link ArithType }
     * 
     */
    public ArithType createArithType() {
        return new ArithType();
    }

    /**
     * Create an instance of {@link Math }
     * 
     */
    public Math createMath() {
        return new Math();
    }

    /**
     * Create an instance of {@link Mphantom }
     * 
     */
    public Mphantom createMphantom() {
        return new Mphantom();
    }

    /**
     * Create an instance of {@link Mtext }
     * 
     */
    public Mtext createMtext() {
        return new Mtext();
    }

    /**
     * Create an instance of {@link None }
     * 
     */
    public None createNone() {
        return new None();
    }

    /**
     * Create an instance of {@link Cartesianproduct }
     * 
     */
    public Cartesianproduct createCartesianproduct() {
        return new Cartesianproduct();
    }

    /**
     * Create an instance of {@link Maligngroup }
     * 
     */
    public Maligngroup createMaligngroup() {
        return new Maligngroup();
    }

    /**
     * Create an instance of {@link Lowlimit }
     * 
     */
    public Lowlimit createLowlimit() {
        return new Lowlimit();
    }

    /**
     * Create an instance of {@link ConstantType }
     * 
     */
    public ConstantType createConstantType() {
        return new ConstantType();
    }

    /**
     * Create an instance of {@link Mtable }
     * 
     */
    public Mtable createMtable() {
        return new Mtable();
    }

    /**
     * Create an instance of {@link ElementaryFunctionsType }
     * 
     */
    public ElementaryFunctionsType createElementaryFunctionsType() {
        return new ElementaryFunctionsType();
    }

    /**
     * Create an instance of {@link Csymbol }
     * 
     */
    public Csymbol createCsymbol() {
        return new Csymbol();
    }

    /**
     * Create an instance of {@link Scalarproduct }
     * 
     */
    public Scalarproduct createScalarproduct() {
        return new Scalarproduct();
    }

    /**
     * Create an instance of {@link Mtd }
     * 
     */
    public Mtd createMtd() {
        return new Mtd();
    }

    /**
     * Create an instance of {@link Ci }
     * 
     */
    public Ci createCi() {
        return new Ci();
    }

    /**
     * Create an instance of {@link Uplimit }
     * 
     */
    public Uplimit createUplimit() {
        return new Uplimit();
    }

    /**
     * Create an instance of {@link Mpadded }
     * 
     */
    public Mpadded createMpadded() {
        return new Mpadded();
    }

    /**
     * Create an instance of {@link LogicType }
     * 
     */
    public LogicType createLogicType() {
        return new LogicType();
    }

    /**
     * Create an instance of {@link Int }
     * 
     */
    public Int createInt() {
        return new Int();
    }

    /**
     * Create an instance of {@link Mn }
     * 
     */
    public Mn createMn() {
        return new Mn();
    }

    /**
     * Create an instance of {@link Msqrt }
     * 
     */
    public Msqrt createMsqrt() {
        return new Msqrt();
    }

    /**
     * Create an instance of {@link Inverse }
     * 
     */
    public Inverse createInverse() {
        return new Inverse();
    }

    /**
     * Create an instance of {@link Msub }
     * 
     */
    public Msub createMsub() {
        return new Msub();
    }

    /**
     * Create an instance of {@link Apply }
     * 
     */
    public Apply createApply() {
        return new Apply();
    }

    /**
     * Create an instance of {@link Otherwise }
     * 
     */
    public Otherwise createOtherwise() {
        return new Otherwise();
    }

    /**
     * Create an instance of {@link In }
     * 
     */
    public In createIn() {
        return new In();
    }

    /**
     * Create an instance of {@link Notsubset }
     * 
     */
    public Notsubset createNotsubset() {
        return new Notsubset();
    }

    /**
     * Create an instance of {@link Selector }
     * 
     */
    public Selector createSelector() {
        return new Selector();
    }

    /**
     * Create an instance of {@link Variance }
     * 
     */
    public Variance createVariance() {
        return new Variance();
    }

    /**
     * Create an instance of {@link Outerproduct }
     * 
     */
    public Outerproduct createOuterproduct() {
        return new Outerproduct();
    }

    /**
     * Create an instance of {@link Mrow }
     * 
     */
    public Mrow createMrow() {
        return new Mrow();
    }

    /**
     * Create an instance of {@link Setdiff }
     * 
     */
    public Setdiff createSetdiff() {
        return new Setdiff();
    }

    /**
     * Create an instance of {@link Merror }
     * 
     */
    public Merror createMerror() {
        return new Merror();
    }

    /**
     * Create an instance of {@link Mtr }
     * 
     */
    public Mtr createMtr() {
        return new Mtr();
    }

    /**
     * Create an instance of {@link Maction }
     * 
     */
    public Maction createMaction() {
        return new Maction();
    }

    /**
     * Create an instance of {@link Mspace }
     * 
     */
    public Mspace createMspace() {
        return new Mspace();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "xor")
    public JAXBElement<LogicType> createXor(LogicType value) {
        return new JAXBElement<LogicType>(_Xor_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "max")
    public JAXBElement<ArithType> createMax(ArithType value) {
        return new JAXBElement<ArithType>(_Max_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "min")
    public JAXBElement<ArithType> createMin(ArithType value) {
        return new JAXBElement<ArithType>(_Min_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arctan")
    public JAXBElement<ElementaryFunctionsType> createArctan(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arctan_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "leq")
    public JAXBElement<RelationsType> createLeq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Leq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "divide")
    public JAXBElement<ArithType> createDivide(ArithType value) {
        return new JAXBElement<ArithType>(_Divide_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "true")
    public JAXBElement<ConstantType> createTrue(ConstantType value) {
        return new JAXBElement<ConstantType>(_True_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "product")
    public JAXBElement<ArithType> createProduct(ArithType value) {
        return new JAXBElement<ArithType>(_Product_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsin")
    public JAXBElement<ElementaryFunctionsType> createArcsin(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsin_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "csc")
    public JAXBElement<ElementaryFunctionsType> createCsc(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Csc_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sec")
    public JAXBElement<ElementaryFunctionsType> createSec(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sec_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sin")
    public JAXBElement<ElementaryFunctionsType> createSin(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sin_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "factorial")
    public JAXBElement<ArithType> createFactorial(ArithType value) {
        return new JAXBElement<ArithType>(_Factorial_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "primes")
    public JAXBElement<ConstantType> createPrimes(ConstantType value) {
        return new JAXBElement<ConstantType>(_Primes_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "rem")
    public JAXBElement<ArithType> createRem(ArithType value) {
        return new JAXBElement<ArithType>(_Rem_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "exists")
    public JAXBElement<LogicType> createExists(LogicType value) {
        return new JAXBElement<LogicType>(_Exists_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "emptyset")
    public JAXBElement<ConstantType> createEmptyset(ConstantType value) {
        return new JAXBElement<ConstantType>(_Emptyset_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccosh")
    public JAXBElement<ElementaryFunctionsType> createArccosh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccosh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "eq")
    public JAXBElement<RelationsType> createEq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Eq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "gcd")
    public JAXBElement<ArithType> createGcd(ArithType value) {
        return new JAXBElement<ArithType>(_Gcd_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "imaginaryi")
    public JAXBElement<ConstantType> createImaginaryi(ConstantType value) {
        return new JAXBElement<ConstantType>(_Imaginaryi_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "equivalent")
    public JAXBElement<RelationsType> createEquivalent(RelationsType value) {
        return new JAXBElement<RelationsType>(_Equivalent_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ln")
    public JAXBElement<ElementaryFunctionsType> createLn(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Ln_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "implies")
    public JAXBElement<LogicType> createImplies(LogicType value) {
        return new JAXBElement<LogicType>(_Implies_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "imaginary")
    public JAXBElement<ArithType> createImaginary(ArithType value) {
        return new JAXBElement<ArithType>(_Imaginary_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "lt")
    public JAXBElement<RelationsType> createLt(RelationsType value) {
        return new JAXBElement<RelationsType>(_Lt_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "neq")
    public JAXBElement<RelationsType> createNeq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Neq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sum")
    public JAXBElement<ArithType> createSum(ArithType value) {
        return new JAXBElement<ArithType>(_Sum_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "infinity")
    public JAXBElement<ConstantType> createInfinity(ConstantType value) {
        return new JAXBElement<ConstantType>(_Infinity_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsech")
    public JAXBElement<ElementaryFunctionsType> createArcsech(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsech_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "approx")
    public JAXBElement<RelationsType> createApprox(RelationsType value) {
        return new JAXBElement<RelationsType>(_Approx_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "real")
    public JAXBElement<ArithType> createReal(ArithType value) {
        return new JAXBElement<ArithType>(_Real_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ident")
    public JAXBElement<FunctionsType> createIdent(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Ident_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "times")
    public JAXBElement<ArithType> createTimes(ArithType value) {
        return new JAXBElement<ArithType>(_Times_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "domain")
    public JAXBElement<FunctionsType> createDomain(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Domain_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccoth")
    public JAXBElement<ElementaryFunctionsType> createArccoth(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccoth_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "csch")
    public JAXBElement<ElementaryFunctionsType> createCsch(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Csch_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "minus")
    public JAXBElement<ArithType> createMinus(ArithType value) {
        return new JAXBElement<ArithType>(_Minus_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cosh")
    public JAXBElement<ElementaryFunctionsType> createCosh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Cosh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "geq")
    public JAXBElement<RelationsType> createGeq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Geq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "plus")
    public JAXBElement<ArithType> createPlus(ArithType value) {
        return new JAXBElement<ArithType>(_Plus_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "or")
    public JAXBElement<LogicType> createOr(LogicType value) {
        return new JAXBElement<LogicType>(_Or_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccsch")
    public JAXBElement<ElementaryFunctionsType> createArccsch(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccsch_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sech")
    public JAXBElement<ElementaryFunctionsType> createSech(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sech_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arctanh")
    public JAXBElement<ElementaryFunctionsType> createArctanh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arctanh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sinh")
    public JAXBElement<ElementaryFunctionsType> createSinh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sinh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "image")
    public JAXBElement<FunctionsType> createImage(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Image_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccsc")
    public JAXBElement<ElementaryFunctionsType> createArccsc(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccsc_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "factorof")
    public JAXBElement<RelationsType> createFactorof(RelationsType value) {
        return new JAXBElement<RelationsType>(_Factorof_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "and")
    public JAXBElement<ElementaryFunctionsType> createAnd(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_And_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "exponentiale")
    public JAXBElement<ConstantType> createExponentiale(ConstantType value) {
        return new JAXBElement<ConstantType>(_Exponentiale_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "conjugate")
    public JAXBElement<ArithType> createConjugate(ArithType value) {
        return new JAXBElement<ArithType>(_Conjugate_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "forall")
    public JAXBElement<LogicType> createForall(LogicType value) {
        return new JAXBElement<LogicType>(_Forall_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "log")
    public JAXBElement<ElementaryFunctionsType> createLog(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Log_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "not")
    public JAXBElement<LogicType> createNot(LogicType value) {
        return new JAXBElement<LogicType>(_Not_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "exp")
    public JAXBElement<ElementaryFunctionsType> createExp(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Exp_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "floor")
    public JAXBElement<ArithType> createFloor(ArithType value) {
        return new JAXBElement<ArithType>(_Floor_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ceiling")
    public JAXBElement<ArithType> createCeiling(ArithType value) {
        return new JAXBElement<ArithType>(_Ceiling_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "rationals")
    public JAXBElement<ConstantType> createRationals(ConstantType value) {
        return new JAXBElement<ConstantType>(_Rationals_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "gt")
    public JAXBElement<RelationsType> createGt(RelationsType value) {
        return new JAXBElement<RelationsType>(_Gt_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "tan")
    public JAXBElement<ElementaryFunctionsType> createTan(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Tan_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "pi")
    public JAXBElement<ConstantType> createPi(ConstantType value) {
        return new JAXBElement<ConstantType>(_Pi_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "coth")
    public JAXBElement<ElementaryFunctionsType> createCoth(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Coth_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "integers")
    public JAXBElement<ConstantType> createIntegers(ConstantType value) {
        return new JAXBElement<ConstantType>(_Integers_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "complexes")
    public JAXBElement<ConstantType> createComplexes(ConstantType value) {
        return new JAXBElement<ConstantType>(_Complexes_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsinh")
    public JAXBElement<ElementaryFunctionsType> createArcsinh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsinh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "quotient")
    public JAXBElement<ArithType> createQuotient(ArithType value) {
        return new JAXBElement<ArithType>(_Quotient_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccot")
    public JAXBElement<ElementaryFunctionsType> createArccot(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccot_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccos")
    public JAXBElement<ElementaryFunctionsType> createArccos(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccos_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cos")
    public JAXBElement<ElementaryFunctionsType> createCos(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Cos_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "root")
    public JAXBElement<ArithType> createRoot(ArithType value) {
        return new JAXBElement<ArithType>(_Root_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cot")
    public JAXBElement<ElementaryFunctionsType> createCot(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Cot_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "reals")
    public JAXBElement<ConstantType> createReals(ConstantType value) {
        return new JAXBElement<ConstantType>(_Reals_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "naturalnumbers")
    public JAXBElement<ConstantType> createNaturalnumbers(ConstantType value) {
        return new JAXBElement<ConstantType>(_Naturalnumbers_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "lcm")
    public JAXBElement<ArithType> createLcm(ArithType value) {
        return new JAXBElement<ArithType>(_Lcm_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "abs")
    public JAXBElement<ArithType> createAbs(ArithType value) {
        return new JAXBElement<ArithType>(_Abs_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "tanh")
    public JAXBElement<ElementaryFunctionsType> createTanh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Tanh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arg")
    public JAXBElement<ArithType> createArg(ArithType value) {
        return new JAXBElement<ArithType>(_Arg_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "notanumber")
    public JAXBElement<ConstantType> createNotanumber(ConstantType value) {
        return new JAXBElement<ConstantType>(_Notanumber_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsec")
    public JAXBElement<ElementaryFunctionsType> createArcsec(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsec_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "codomain")
    public JAXBElement<FunctionsType> createCodomain(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Codomain_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "compose")
    public JAXBElement<FunctionsType> createCompose(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Compose_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "power")
    public JAXBElement<ArithType> createPower(ArithType value) {
        return new JAXBElement<ArithType>(_Power_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "false")
    public JAXBElement<ConstantType> createFalse(ConstantType value) {
        return new JAXBElement<ConstantType>(_False_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "eulergamma")
    public JAXBElement<ConstantType> createEulergamma(ConstantType value) {
        return new JAXBElement<ConstantType>(_Eulergamma_QNAME, ConstantType.class, null, value);
    }

}
